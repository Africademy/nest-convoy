# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [dev, master]
  pull_request:
    branches: [dev, master]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Running Yarn install
        run: yarn install --frozen-lockfile

#      - name: Snyk
#        uses: snyk/actions@0.1.1
#        with:
#          # Which Snyk command to run, defaults to test
#          command: # optional, default is test
#          # Additional arguments to pass to Snyk
#          args: # optional
      - name: Extract branch name
        id: extract_branch
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

      - name: Setting up Bazel configuration for Github Actions
        run: ./.github/setup_bazel.sh .github/bazel.rc .bazelrc.user ${{ steps.extract_branch.outputs.branch }}
        env:
          BUILD_BUDDY_TOKEN: ${{ secrets.BUILD_BUDDY }}

      - name: Initializing Bazel
        run: |
          # Symlink fetched bazelisk to /usr/local/bin/bazel
          pathToBazel=$(realpath ./node_modules/@bazel/bazelisk/bazelisk-linux_amd64)
          sudo ln -fs $pathToBazel /usr/local/bin/bazel
          echo "Bazel version:"
          bazel version

      - name: Build packages
        run: bazel build //packages/...

      - name: Test packages
        run: bazel test //packages/...

